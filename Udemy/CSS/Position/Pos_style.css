    /* Position -  sets how an element is positioned in a document. Top, Right, Down, Left, properties determine fixed location of positioned elements. */
div{
    width: 200px;
    height: 200px;
    border: 5px inset darkslategrey;
    background-color: firebrick;
    margin: 10px;
    display: inline-block;
}

#middle{
    background-color: darkturquoise;
}

#static #middle{
    position: static;
    width: 300px;
    background-color: blueviolet;   
    /* Static postion is default position for all elements. When set to static they stay as they are and cannot be resized or adjusted in any other way. */
}
#Relative #middle{
    position: relative;
    top: 20px;
    left: -100px;
    /* When position is set to relative elements are positioned relative to their original position when position is adjusted. Element moves in opposite direction of adjustment set, eg. when adjusting the top the element itself moves downwards. The elements are offset from their orignal positions. */
}

#Absolute {
    position: relative;
}

#Absolute #middle{
    position: absolute;
    top: 30px;
    left: 30px;
    /* When position is set to absolute, The element is removed from the normal document flow, and no space is created for the element in the page layout. It is positioned relative to its closest positioned ancestor, if any; otherwise, it is placed relative to the initial containing block (body in his case).  Its final position is determined by the values of top, right, bottom, and left. */
}

#Fixed #middle {
    position: fixed;
    top: 0;
    left: 800px;
    /* When position is set to fixed, The element is removed from the normal document flow, and no space is created for the element in the page layout. It is positioned relative to the initial containing block established by the viewport, except when one of its ancestors has a transform, perspective, or filter property set to something other than none (see the CSS Transforms Spec), in which case that ancestor behaves as the containing block. (Note that there are browser inconsistencies with perspective and filter contributing to containing block formation.) Its final position is determined by the values of top, right, bottom, and left. */
}

#Sticky #middle{
    position: sticky;
    top: 20px;
   /* When position is set to sticky, The element is positioned according to the normal flow of the document, and then offset relative to its nearest scrolling ancestor and containing block (nearest block-level ancestor), including table-related elements, based on the values of top, right, bottom, and left. The offset does not affect the position of any other elements. This means that whatever block-level element the positioned element is placed in, the offset stops when we reach the end of that block-level element on a document. The value determines from how far from the beginning of within that containing block the positioned element will be offset when scrolling commences. Left, right, top and bottom determine the scrolling direction of the positioned element within that contining block. */
}
    