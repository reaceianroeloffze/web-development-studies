/* Display Property
    Many Variations
    Top 3 are:
    1. Inline - Width & height ignored when display is set to inline. Also, all discussed properties so far only apply to the content tagged inside an inline element and all content around that remain unaffected.
    2. Block - Treats all elements as block elements thus applying and respecting all bordering/padding/marginal parameters.
    3. Inline-Block - will behave like an inline element but block parameters will be applied and respected
    
    CSS Units
    Relative Units:
    EM - 1 em = font size of parent. 2 ems's = 2 x font-size, etc.
        1 em = computed font-size of element itself.
        Common problem with em's is that they can stack, ie, shrink or grow rapidly.
    REM - Relative to root html element's font-size and often easier to work with.
        if 1 root font-size is 20px, 1 rem will always be 20px, 2 rem will be 40px, etc.
    VH
    VW
    %
    More
    Sometimes it's the value of the parent and sometimes it's the value of the element itself.
    
    Absolute units:
    PX
    PT
    CM
    IN
    MM */

h1{display: inline;
    background-color: darkslategray;
    border: 2px ridge greenyellow;
}
h2{
    font-size: 50px;
    border: 3px black solid;
    background-color: goldenrod;
    line-height: 200%;
}
span{
    background-color: yellow;
    border: 2px solid darkviolet;
    padding: 15px;
    margin: 20px;
    width: 20px;
    height: 20px;
    display: none;
}
div{
    width: 200px;
    height: 200px;
    border: 5px solid;
    margin: 5px;
    background-color: deeppink;
    display: inline-block;
    padding: 10px;
}
section{
     height: 500px;
     width: 600px;
     background-color: dimgray;
 }
main{
     width: 70%;
     height: 80%;
     background-color: gold;
 }
h3{
    font-size: 2em;
     /* inheriting a font size which makes it twice that font size */
    margin-left: 2em;
    /* in the case of the margin and padding properties the secomd rule of the em applies, resizing based on the font-size set for the element itself, in this case the h3. But, should the parent font-size be changed everything within that parent element will be resized accordingly. Sort of like a domino effect. */
   
}
p {
    font-size: .9em;
    /* inheriting a font size which makes it twice that font size */
}
#rems article{
    font-size: 4rem;
    /* Font size set by parent element and now the em responds to this instead of the inherited font-size. Thus, when no font-size is set for the parent element, only then will em's resize using inherited font-sizes. */
}
button {
    font-size: 2em;
    padding: 0 2em;
    border-radius: 2em;
}
h4 {
    font-size: 30px;
    line-height: 200%;
}
#ems ul {
    font-size: 1.5em;;
}
html{
    font-size: 20px;
}

summary{
    font-size: 4rem;
}